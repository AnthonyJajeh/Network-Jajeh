%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Red-black Gauss-Seidel iterations for the network system:
% Boundary conditions: Dirichlet at x=0 and x=1: u(0,y)=0, u(1,y)=pdrop
%
% Last modified: 5/15/2020
%

function u = gsnetw(nx,ny,u,f,sv,sh,kit)

for kv = 1:kit
    
%  red nodes:

u(2:2:nx,1) = (sh(2:2:nx,1).*u(3:2:nx+1,1) + sh(1:2:nx-1,1).*u(1:2:nx-1,1) + ...
               sv(2:2:nx,1).*u(2:2:nx,2) - f(2:2:nx,1))./ ...
              (sh(2:2:nx,1) + sh(1:2:nx-1,1) + sv(2:2:nx,1));

u(2:2:nx,3:2:ny-1) = (sh(2:2:nx,3:2:ny-1).*u(3:2:nx+1,3:2:ny-1) + sh(1:2:nx-1,3:2:ny-1).*u(1:2:nx-1,3:2:ny-1) + ...
                      sv(2:2:nx,3:2:ny-1).*u(2:2:nx,4:2:ny) + sv(2:2:nx,2:2:ny-2).*u(2:2:nx,2:2:ny-2) - f(2:2:nx,3:2:ny-1))./ ...
                     (sh(2:2:nx,3:2:ny-1) + sh(1:2:nx-1,3:2:ny-1) + sv(2:2:nx,3:2:ny-1) + sv(2:2:nx,2:2:ny-2));

u(2:2:nx,ny+1) = (sh(2:2:nx,ny+1).*u(3:2:nx+1,ny+1) + sh(1:2:nx-1,ny+1).*u(1:2:nx-1,ny+1) + ...
                  sv(2:2:nx,ny).*u(2:2:nx,ny) - f(2:2:nx,ny+1))./ ...
                 (sh(2:2:nx,ny+1) + sh(1:2:nx-1,ny+1) + sv(2:2:nx,ny));


u(3:2:nx-1,2:2:ny) = (sh(3:2:nx-1,2:2:ny).*u(4:2:nx,2:2:ny) + sh(2:2:nx-2,2:2:ny).*u(2:2:nx-2,2:2:ny) + ...
                      sv(3:2:nx-1,2:2:ny).*u(3:2:nx-1,3:2:ny+1) + sv(3:2:nx-1,1:2:ny-1).*u(3:2:nx-1,1:2:ny-1) - f(3:2:nx-1,2:2:ny))./ ...
                     (sh(3:2:nx-1,2:2:ny) + sh(2:2:nx-2,2:2:ny) + sv(3:2:nx-1,2:2:ny) + sv(3:2:nx-1,1:2:ny-1));

%  black nodes:
 
u(3:2:nx-1,1) = (sh(3:2:nx-1,1).*u(4:2:nx,1) + sh(2:2:nx-2,1).*u(2:2:nx-2,1) + sv(3:2:nx-1,1).*u(3:2:nx-1,2) - f(3:2:nx-1,1))./ ...
                (sh(3:2:nx-1,1) + sh(2:2:nx-2,1) + sv(3:2:nx-1,1));

   
u(3:2:nx-1,3:2:ny-1) = (sh(3:2:nx-1,3:2:ny-1).*u(4:2:nx,3:2:ny-1) + sh(2:2:nx-2,3:2:ny-1).*u(2:2:nx-2,3:2:ny-1) + ...
                        sv(3:2:nx-1,3:2:ny-1).*u(3:2:nx-1,4:2:ny) + sv(3:2:nx-1,2:2:ny-2).*u(3:2:nx-1,2:2:ny-2) - ...
                        f(3:2:nx-1,3:2:ny-1))./ ...
                       (sh(3:2:nx-1,3:2:ny-1) + sh(2:2:nx-2,3:2:ny-1) + sv(3:2:nx-1,3:2:ny-1) + sv(3:2:nx-1,2:2:ny-2));

u(3:2:nx-1,ny+1) = (sh(3:2:nx-1,ny+1).*u(4:2:nx,ny+1) + sh(2:2:nx-2,ny+1).*u(2:2:nx-2,ny+1) + sv(3:2:nx-1,ny).*u(3:2:nx-1,ny) - ...
                    f(3:2:nx-1,ny+1))./ ...
                   (sh(3:2:nx-1,ny+1) + sh(2:2:nx-2,ny+1) + sv(3:2:nx-1,ny));


u(2:2:nx,2:2:ny) = (sh(2:2:nx,2:2:ny).*u(3:2:nx+1,2:2:ny) + sh(1:2:nx-1,2:2:ny).*u(1:2:nx-1,2:2:ny) + ...
                    sv(2:2:nx,2:2:ny).*u(2:2:nx,3:2:ny+1) + sv(2:2:nx,1:2:ny-1).*u(2:2:nx,1:2:ny-1) - ...
                    f(2:2:nx,2:2:ny))./ ...
                   (sh(2:2:nx,2:2:ny) + sh(1:2:nx-1,2:2:ny) + sv(2:2:nx,2:2:ny) + sv(2:2:nx,1:2:ny-1));
end
return